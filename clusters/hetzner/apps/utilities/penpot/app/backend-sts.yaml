apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: penpot
    type: backend
  name: penpot-backend
  namespace: utilities
spec:
  selector:
    matchLabels:
      app: penpot
      type: backend
  serviceName: penpot-backend
  template:
    metadata:
      labels:
        app: penpot
        type: backend
    spec:
      hostname: penpot-backend
      containers:
        - name: penpot-backend
          image: penpotapp/backend:1.19.0
          resources:
            requests:
              memory: "500Mi"
            limits:
              memory: "1Gi"
          ports:
            - containerPort: 6060
              name: http
      envFromSecret: penpot-backend-secrets
      env:
        - name: PENPOT_HTTP_PORT
          value: "6060"
        - name: PENPOT_PUBLIC_URI
          value: "https://api.penpot.behn.dev"
        - name: PENPOT_FLAGS
          value: "enable-login-with-oidc enable-smtp enable-prepl-server"
        - name: PENPOT_DATABASE_URL
          value: "postgres://postgresql.database.svc.cluster.local/penpot"
        - name: PENPOT_DATABASE_USERNAME
          value: "penpot"
        # PENPOT_DATABASE_PASSWORD is set via envFromSecret
        - name: PENPOT_REDIS_URL
          value: "redis://redis.database.svc.cluster.local/1"
        - name: PENPOT_ASSETS_STORAGE_BACKEND
          value: "assets-s3"
        # PENPOT_AWS_ACCESS_KEY_ID is set via envFromSecret
        # PENPOT_AWS_SECRET_ACCESS_KEY is set via envFromSecret
        - name: PENPOT_STORAGE_ASSETS_S3_REGION
          value: "eu-central-1"
        - name: PENPOT_STORAGE_ASSETS_S3_BUCKET
          value: "penpot-assets"
        - name: PENPOT_STORAGE_ASSETS_S3_ENDPOINT
          value: "https://s3.behn.dev"
        - name: PENPOT_SMTP_HOST
          value: "email-smtp.eu-west-2.amazonaws.com"
        # PENPOT_SMTP_USERNAME is set via envFromSecret
        # PENPOT_SMTP_PASSWORD is set via envFromSecret
