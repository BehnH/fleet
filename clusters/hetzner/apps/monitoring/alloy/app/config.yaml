apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy-config
  namespace: monitoring
data:
  config.alloy: |
    logging {
      level = "info"
      format = "json"
    }
    prometheus.remote_write "mimir" {
      endpoint {
        url = "http://mimir.monitoring.svc.cluster.local/api/v1/push"
      }
    }
    loki.write "in_cluster" {
      endpoint {
        url = "http://loki.monitoring.svc.cluster.local/loki/api/v1/push"
      }
    }
    discovery.kubernetes "k8s_pods" {
      role = "pod"
    }
    discovery.kubernetes "k8s_no_kube_system" {
      role = "pod"
      namespaces {
        names = ["analytics","database","media","monitoring","networking","security","storage","tailscale","utilities","flux-system","istio-system"]
      }
    }
    discovery.kubernetes "felix_service" {
      role = "service"
      selectors {
        role = "service"
        label = "__meta_kubernetes_service_name=felix-metrics-svc"
      }
      namespaces {
        names = ["calico-system"]
      }
    }
    discovery.kubernetes "typha_metrics" {
      role = "service"
      selectors {
        role = "service"
        label = "__meta_kubernetes_service_name=typha-metrics-svc"
      }
      namespaces {
        names = ["calico-system"]
      }
    }
    
    prometheus.scrape "felix_metrics" {
      targets = discovery.kubernetes.felix_service.targets
      scrape_interval = "30s"
    
      forward_to = [prometheus.remote_write.mimir.receiver]
    }
    prometheus.scrape "typha_metrics" {
      targets = discovery.kubernetes.typha_metrics.targets
      scrape_interval = "30s"
    
      forward_to = [prometheus.remote_write.mimir.receiver]
    }
    prometheus.scrape "k8s_pods" {
      targets = discovery.kubernetes.k8s_pods.targets
      forward_to = [prometheus.remote_write.mimir.receiver]
    }
    prometheus.scrape "radarr" {
      targets = "radarr-exporter.media.svc.cluster.local:9707"
      scrape_interval = "60s"
    
      forward_to = [prometheus.remote_write.mimir.receiver]
    }
    prometheus.scrape "sonarr" {
      targets = "sonarr-exporter.media.svc.cluster.local:9707"
      scrape_interval = "60s"
    
      forward_to = [prometheus.remote_write.mimir.receiver]
    }
    prometheus.scrape "sabnzbd" {
      targets = "sabnzbd-exporter.media.svc.cluster.local:9707"
      scrape_interval = "60s"
    
      forward_to = [prometheus.remote_write.mimir.receiver]
    }
      
    loki.source.kubernetes "k8s_pods" {
      targets = discovery.kubernetes.k8s_no_kube_system.targets
      forward_to = [loki.write.in_cluster.receiver]
    }